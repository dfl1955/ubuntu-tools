#!/bin/bash

# Ver 1.3
VER=1.3

# tests the disk store against the permitted number of file descriptors
# and runs a weed program if there is not enough space.

# it has been tuned for use on davelevy.info where there is no root privilege
# so no logger and no /var nor /etc

#	-d debug, turns on stronger log messages" 
#   -o nn resets the threshold at which the program calls the action program, it is a % and defaults to 90%
#   -c clears the lock file
#   -h displays this message\n\n )
#
USAGE="$(basename $0) [ -d , -o nn,| -c | -h ]"
verbose=false # the default, see function smsg

smsg()
{
	[ $verbose == "true" ] && echo $*
}

t=90 ;								# default threshold
lock=${HOME}/etc/filealarm.lock ; 	# hysterises
#
# The action program is a variable
#     vvvvvvvvvvvvvv
#
clearcacheprogram=${HOME}/bin/cwpc3

if [ ! -x $clearcacheprogram ];then
	echo Can\'t find $( basename ${clearcachename}) 
	exit
fi

while getopts dho:c arg
do
case $arg in 
-d|d)	# debug, more displays
		verbose=true
		;;
-o|o)	smsg threshold := $OPTARG
		# this should be a t parameter for thresholdoverride
		t=$OPTARG
		;;
-c|c)	if [ -r $(lock) ]; then
			echo WARNING removing lock file
			rm ${lock}
		else
			echo WARNING del lock requested but does not exist
		fi
		exit
		;;
-h|h)	echo $USAGE; 
		# I'll have to put the argument list into a file and cat it
		tail -6 ${HOME}/bin/filealarm.help
		exit ;;
*)		echo $USAGE; exit
		;;
esac
done

when=$(date "+%d-%b-%y %T")

smsg()
{
	[ $verbose == "true" ] && echo $*
}

# what is the limit

smsg alarm threshold set at ${t} pct
filelimit=262144
let "c=( ${filelimit} * $t / 100)"
filealarm=$c
smsg limit is ${filelimit} alarm is $filealarm

# how many files are in use

logfile=$HOME/etc/filesinuse.dat
filesinuse=$( cat $logfile )
smsg files in use = $filesinuse, alarm = $filealarm

# uses log rotate

currentstate=${HOME}/etc/filesinuse.dat
history=${HOME}/etc/filealarm-log.dat 
smsg history file is ${history}
logrotatestatus=${HOME}/etc/logrotate.status
/usr/sbin/logrotate -s ${logrotatestatus} $HOME/etc/filealarm-log.conf

# hysterises

lock=${HOME}/etc/filealarm.lock

makemessage()
{
	echo " $(basename $0) $VER $when Files in use $1, alarm threshold, $2"
}

if [ ${filesinuse} -gt ${filealarm} ]
then
	# Too many files, action needed
	#
	smsg Too many files
	# write an alarm record and an alarm record log
	# compose message
	message=$(makemessage $filesinuse $filealarm )
	message="${message}, weeding the wordpress cache"
	echo $message  | tee -a ${history} 
	smsg testing for lock file  
	ls -l $clearcacheprogram
	if [ ! -a ${lock} ] 
	then
		touch ${lock} 
		makemessage clearing the cache
		echo $message  | tee -a ${history} 
	 	${HOME}/bin/cwpc3 -f -q ;# needs testing, and needs a log, 
		makemessage cache cleared
		echo $message  | tee -a ${history} 
	else
		makemessage , lock file exists, exiting
		echo $message
	fi
else
	message=$(makemessage $filesinuse $filealarm )
	message="${message} , no action reqd." 
	echo $message
	smsg $(basename $0) $VER Enough space, no further action to be taken
	# rm the alarm log flag`
	[ -a ${lock} ] && rm ${lock}
fi
